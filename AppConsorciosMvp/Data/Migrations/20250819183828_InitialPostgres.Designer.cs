// <auto-generated />
using System;
using AppConsorciosMvp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppConsorciosMvp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250819183828_InitialPostgres")]
    partial class InitialPostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppConsorciosMvp.Models.Administradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("Ativa");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Administradoras");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PropostaNegociacaoId")
                        .HasColumnType("integer");

                    b.Property<long>("TamanhoBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropostaNegociacaoId");

                    b.ToTable("Anexos");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeOriginal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("TamanhoBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.CartaAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArquivoId")
                        .HasColumnType("integer");

                    b.Property<int>("CartaConsorcioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("CartaConsorcioId");

                    b.ToTable("CartaAnexos");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.CartaConsorcio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministradoraId")
                        .HasColumnType("integer");

                    b.Property<int?>("CompradorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataContemplacao")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("timestamp");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<bool>("EhVerificado")
                        .HasColumnType("boolean");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NumeroCota")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<int>("ParcelasPagas")
                        .HasColumnType("integer");

                    b.Property<int>("ParcelasTotais")
                        .HasColumnType("integer");

                    b.Property<int?>("PropostaVendaId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoBem")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoContemplacao")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ValorCredito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdministradoraId");

                    b.HasIndex("CompradorId");

                    b.HasIndex("PropostaVendaId");

                    b.HasIndex("Status");

                    b.HasIndex("TipoBem");

                    b.HasIndex("VendedorId");

                    b.ToTable("CartasConsorcio");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.DocumentoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObservacoesValidacao")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pendente");

                    b.Property<long>("TamanhoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ValidadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ValidadoPorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("TipoDocumento");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ValidadoPorId");

                    b.HasIndex("UsuarioId", "TipoDocumento")
                        .IsUnique();

                    b.ToTable("DocumentosUsuario");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.ParametroSistema", b =>
                {
                    b.Property<string>("Chave")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Chave");

                    b.ToTable("ParametroSistema");

                    b.HasData(
                        new
                        {
                            Chave = "Azure.Container.DocumentosUsuarios",
                            Descricao = "Container para documentos de validação dos usuários (PII)",
                            Valor = "documentos-usuarios"
                        },
                        new
                        {
                            Chave = "Azure.Container.AnexosPropostas",
                            Descricao = "Container para anexos de propostas",
                            Valor = "anexos-propostas"
                        },
                        new
                        {
                            Chave = "Azure.Container.AnexosCartas",
                            Descricao = "Container para anexos de cartas",
                            Valor = "anexos-cartas"
                        },
                        new
                        {
                            Chave = "Azure.Container.Default",
                            Descricao = "Container padrão caso não definido",
                            Valor = "documentos-usuarios"
                        });
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.PropostaAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArquivoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PropostaNegociacaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ArquivoId");

                    b.HasIndex("PropostaNegociacaoId");

                    b.ToTable("PropostaAnexos");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.PropostaNegociacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Agio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AnexoBlobName")
                        .HasColumnType("text");

                    b.Property<string>("AnexoBlobUrl")
                        .HasColumnType("text");

                    b.Property<string>("AnexoContentType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AnexoNomeArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("AnexoTamanhoBytes")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CanceladaEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CartaConsorcioId")
                        .HasColumnType("integer");

                    b.Property<int>("CompradorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CriadaEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EfetivadaEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MotivoCancelamento")
                        .HasColumnType("text");

                    b.Property<int?>("PrazoMeses")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CartaConsorcioId");

                    b.HasIndex("CompradorId");

                    b.HasIndex("Status");

                    b.ToTable("PropostasNegociacao");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EhVerificado")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Papel")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Anexo", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.PropostaNegociacao", "Proposta")
                        .WithMany()
                        .HasForeignKey("PropostaNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.CartaAnexo", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.Arquivo", "Arquivo")
                        .WithMany()
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppConsorciosMvp.Models.CartaConsorcio", "Carta")
                        .WithMany()
                        .HasForeignKey("CartaConsorcioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Carta");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.CartaConsorcio", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.Administradora", "Administradora")
                        .WithMany("CartasConsorcio")
                        .HasForeignKey("AdministradoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppConsorciosMvp.Models.Usuario", "Comprador")
                        .WithMany()
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppConsorciosMvp.Models.PropostaNegociacao", "PropostaVenda")
                        .WithMany()
                        .HasForeignKey("PropostaVendaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AppConsorciosMvp.Models.Usuario", "Vendedor")
                        .WithMany("CartasConsorcio")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Administradora");

                    b.Navigation("Comprador");

                    b.Navigation("PropostaVenda");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.DocumentoUsuario", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppConsorciosMvp.Models.Usuario", "ValidadoPor")
                        .WithMany()
                        .HasForeignKey("ValidadoPorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Usuario");

                    b.Navigation("ValidadoPor");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.PropostaAnexo", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.Arquivo", "Arquivo")
                        .WithMany()
                        .HasForeignKey("ArquivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppConsorciosMvp.Models.PropostaNegociacao", "Proposta")
                        .WithMany("Anexos")
                        .HasForeignKey("PropostaNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arquivo");

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.PropostaNegociacao", b =>
                {
                    b.HasOne("AppConsorciosMvp.Models.CartaConsorcio", "Carta")
                        .WithMany("Propostas")
                        .HasForeignKey("CartaConsorcioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppConsorciosMvp.Models.Usuario", "Comprador")
                        .WithMany("PropostasComoComprador")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carta");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Administradora", b =>
                {
                    b.Navigation("CartasConsorcio");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.CartaConsorcio", b =>
                {
                    b.Navigation("Propostas");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.PropostaNegociacao", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("AppConsorciosMvp.Models.Usuario", b =>
                {
                    b.Navigation("CartasConsorcio");

                    b.Navigation("PropostasComoComprador");
                });
#pragma warning restore 612, 618
        }
    }
}
